// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/argoproj/argo-workflows/v3/pkg/apis/workflow/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// WorkflowNodeLister helps list WorkflowNodes.
// All objects returned here must be treated as read-only.
type WorkflowNodeLister interface {
	// List lists all WorkflowNodes in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.WorkflowNode, err error)
	// WorkflowNodes returns an object that can list and get WorkflowNodes.
	WorkflowNodes(namespace string) WorkflowNodeNamespaceLister
	WorkflowNodeListerExpansion
}

// workflowNodeLister implements the WorkflowNodeLister interface.
type workflowNodeLister struct {
	indexer cache.Indexer
}

// NewWorkflowNodeLister returns a new WorkflowNodeLister.
func NewWorkflowNodeLister(indexer cache.Indexer) WorkflowNodeLister {
	return &workflowNodeLister{indexer: indexer}
}

// List lists all WorkflowNodes in the indexer.
func (s *workflowNodeLister) List(selector labels.Selector) (ret []*v1alpha1.WorkflowNode, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.WorkflowNode))
	})
	return ret, err
}

// WorkflowNodes returns an object that can list and get WorkflowNodes.
func (s *workflowNodeLister) WorkflowNodes(namespace string) WorkflowNodeNamespaceLister {
	return workflowNodeNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// WorkflowNodeNamespaceLister helps list and get WorkflowNodes.
// All objects returned here must be treated as read-only.
type WorkflowNodeNamespaceLister interface {
	// List lists all WorkflowNodes in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.WorkflowNode, err error)
	// Get retrieves the WorkflowNode from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.WorkflowNode, error)
	WorkflowNodeNamespaceListerExpansion
}

// workflowNodeNamespaceLister implements the WorkflowNodeNamespaceLister
// interface.
type workflowNodeNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all WorkflowNodes in the indexer for a given namespace.
func (s workflowNodeNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.WorkflowNode, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.WorkflowNode))
	})
	return ret, err
}

// Get retrieves the WorkflowNode from the indexer for a given namespace and name.
func (s workflowNodeNamespaceLister) Get(name string) (*v1alpha1.WorkflowNode, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("workflownode"), name)
	}
	return obj.(*v1alpha1.WorkflowNode), nil
}
