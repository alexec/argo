// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import (
	context "context"
	http "net/http"

	mock "github.com/stretchr/testify/mock"

	v1alpha1 "github.com/argoproj/argo/pkg/apis/workflow/v1alpha1"
)

// Interface is an autogenerated mock type for the Interface type
type Interface struct {
	mock.Mock
}

// Authorize provides a mock function with given fields: ctx, authorization
func (_m *Interface) Authorize(ctx context.Context, authorization string) (v1alpha1.User, error) {
	ret := _m.Called(ctx, authorization)

	var r0 v1alpha1.User
	if rf, ok := ret.Get(0).(func(context.Context, string) v1alpha1.User); ok {
		r0 = rf(ctx, authorization)
	} else {
		r0 = ret.Get(0).(v1alpha1.User)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, string) error); ok {
		r1 = rf(ctx, authorization)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// HandleCallback provides a mock function with given fields: writer, request
func (_m *Interface) HandleCallback(writer http.ResponseWriter, request *http.Request) {
	_m.Called(writer, request)
}

// HandleRedirect provides a mock function with given fields: writer, request
func (_m *Interface) HandleRedirect(writer http.ResponseWriter, request *http.Request) {
	_m.Called(writer, request)
}
